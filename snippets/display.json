{
  "Text(string, x, y, color, justify)": {
    "prefix": "Text",
    "body": "display.Text(${1:string}, ${2:x}, ${3:y}, ${4:color}, justify=display.${5|TOP_LEFT,MIDDLE_LEFT,BOTTOM_LEFT,TOP_CENTER,BOTTOM_CENTER,TOP_RIGHT,MIDDLE_CENTER,MIDDLE_RIGHT,BOTTOM_RIGHT|})",
    "description": "Creates a text object at the coordinate x, y which can be passed to display.show(). string can be any string, and color can be any color from the available color palette. If the justify parameter is given, the text will be justified accordingly from the x, y coordinate."
  },
  "Rectangle(x1, y1, x2, y2, color)": {
    "prefix": "Rectangle",
    "body": "display.Rectangle(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2},${5:color})",
    "description": "Creates a rectangle object which can be passed to display.show(). x1, y1 and x2, y2 define each corner of the rectangle. color can be any color from the available color palette."
  },
  "Line(x1, y1, x2, y2, color, thickness=1)": {
    "prefix": "Line",
    "body": "display.Line(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:color},thickness=${6:1})",
    "description": "Creates a line object from x1, y1 to x2, y2 which can be passed to display.show(). color can be any color from the available color palette, and thickness can optionally be provided to override the default line thickness in pixels."
  },
  "Polygon([x1, y1, ... xn, yn], color)": {
    "prefix": "Polygon",
    "body": "display.Polygon([${1:x1}, ${2:y1},${3:x2},${4:y2}], ${5:color})",
    "description": "Creates a polygon object which can be passed to display.show(). The first parameter should be a list of coordinates, and color can be any color from the available color palette. Polygons are always closed shapes, therefore if the last coordinate does not close the shape, it will be closed automatically."
  },
  "Polyline([x1,y1,...xn,yn],color,thickness=1)": {
    "prefix": "Polyline",
    "body": "display.Polyline([${1:x1}, ${2:y1}, ${3:x2},${4:y2}], ${4:color}],${5:color},thickness=${6:1})",
    "description": "Similar to the Polygon object, Polyline creates a shape based on a list of coordinates. Unlike Polygon, Polyline does not need to be a closed shape. color can be any color from the available color palette, and thickness can optionally be provided to override the default line thickness in pixels."
  },
  "show(object_1,object_2...)": {
    "prefix": "show",
    "body": "display.show(${1:object_1},${2:object_2})",
    "description": "Prints to the display. The passed arguments can be any number of Text, Line, Rectangle, Polygon, or Polyline objects, or any number of lists containing such objects. Objects are layered front to back, i.e. object_1 is shown on top of object_n."
  },
  "move(x, y)": {
    "prefix": "move",
    "body": "display.move(${1:x}, ${2:y})",
    "description": "move() can be called as a class method on any printable object to translate its position. x and y will move the object relative to its current position."
  },
  "move([objects], x, y)": {
    "prefix": "move",
    "body": "display.move([${1:objects}], ${2:x}, ${3:y})",
    "description": "Additionally, move() can be called as a standard function to move a list of objects together. This is useful for grouping printable objects together and moving them as layers."
  },
  "color(color)": {
    "prefix": "color",
    "body": "display.color(${1:color})",
    "description": "color() can be called as a class method on any printable object to change its color. color can be any color from the available color palette."
  },
  "color([objects], color)": {
    "prefix": "color",
    "body": "display.color([${1:objects}], ${2:color})",
    "description": "Additionally, color() can be called as a standard function to change the color on a whole list of objects. color can be any color from the available color palette."
  },
  "brightness(level)": {
    "prefix": "brightness",
    "body": "display.brightness(${1|1,2,3,4|})",
    "description": "Sets the displayâ€™s brightness. level can be 0 (dimmest), 1, 2, 3, or 4 (brightest). Level 3 is the default."
  },
  "CLEAR": {
    "prefix": "CLEAR",
    "body": "display.CLEAR",
    "description": "If using the default color palette, this constant indexes the color #000000. Note, color indexes may be overridden by the user."
  },
  "RED": {
    "prefix": "RED",
    "body": "display.RED",
    "description": "If using the default color palette, this constant indexes the color #ad2323. Note, color indexes may be overridden by the user."
  },
  "GREEN": {
    "prefix": "GREEN",
    "body": "display.GREEN",
    "description": "If using the default color palette, this constant indexes the color #1d6914. Note, color indexes may be overridden by the user."
  },
  "BLUE": {
    "prefix": "BLUE",
    "body": "display.BLUE",
    "description": "If using the default color palette, this constant indexes the color #2a4bd7. Note, color indexes may be overridden by the user."
  },
  "CYAN": {
    "prefix": "CYAN",
    "body": "display.CYAN",
    "description": "If using the default color palette, this constant indexes the color #29d0d0. Note, color indexes may be overridden by the user."
  },
  "MAGENTA": {
    "prefix": "MAGENTA",
    "body": "display.MAGENTA",
    "description": "If using the default color palette, this constant indexes the color #8126c0. Note, color indexes may be overridden by the user."
  },
  "YELLOW": {
    "prefix": "YELLOW",
    "body": "display.YELLOW",
    "description": "If using the default color palette, this constant indexes the color #ffee33. Note, color indexes may be overridden by the user."
  },
  "WHITE": {
    "prefix": "WHITE",
    "body": "display.WHITE",
    "description": "If using the default color palette, this constant indexes the color #ffffff. Note, color indexes may be overridden by the user."
  },
  "GRAY1": {
    "prefix": "GRAY1",
    "body": "display.GRAY1",
    "description": "If using the default color palette, this constant indexes the color #1c1c1c. Note, color indexes may be overridden by the user."
  },
  "GRAY2": {
    "prefix": "GRAY2",
    "body": "display.GRAY2",
    "description": "If using the default color palette, this constant indexes the color #383838. Note, color indexes may be overridden by the user."
  },
  "GRAY3": {
    "prefix": "GRAY3",
    "body": "display.GRAY3",
    "description": "If using the default color palette, this constant indexes the color #555555. Note, color indexes may be overridden by the user."
  },
  "GRAY4": {
    "prefix": "GRAY4",
    "body": "display.GRAY4",
    "description": "If using the default color palette, this constant indexes the color #717171. Note, color indexes may be overridden by the user."
  },
  "GRAY5": {
    "prefix": "GRAY5",
    "body": "display.GRAY5",
    "description": "If using the default color palette, this constant indexes the color #8d8d8d. Note, color indexes may be overridden by the user."
  },
  "GRAY6": {
    "prefix": "GRAY6",
    "body": "display.GRAY6",
    "description": "If using the default color palette, this constant indexes the color #aaaaaa. Note, color indexes may be overridden by the user."
  },
  "GRAY7": {
    "prefix": "GRAY7",
    "body": "display.GRAY7",
    "description": "If using the default color palette, this constant indexes the color #c6c6c6. Note, color indexes may be overridden by the user."
  },
  "GRAY8": {
    "prefix": "GRAY8",
    "body": "display.GRAY8",
    "description": "If using the default color palette, this constant indexes the color #e2e2e2. Note, color indexes may be overridden by the user."
  },
  "TOP_LEFT": {
    "prefix": "TOP_LEFT",
    "body": "display.TOP_LEFT",
    "description": "Justifies a text object on its x, y coordinate to the top left."
  },
  "MIDDLE_LEFT": {
    "prefix": "MIDDLE_LEFT",
    "body": "display.MIDDLE_LEFT",
    "description": "Justifies a text object on its x, y coordinate to the middle left"
  },
  "BOTTOM_LEFT": {
    "prefix": "BOTTOM_LEFT",
    "body": "display.BOTTOM_LEFT",
    "description": "Justifies a text object on its x, y coordinate to the bottom left."
  },
  "TOP_CENTER": {
    "prefix": "TOP_CENTER",
    "body": "display.TOP_CENTER",
    "description": "Justifies a text object on its x, y coordinate to the top center."
  },
  "BOTTOM_CENTER": {
    "prefix": "BOTTOM_CENTER",
    "body": "display.BOTTOM_CENTER",
    "description": "Justifies a text object on its x, y coordinate to the middle cente."
  },
  "TOP_RIGHT": {
    "prefix": "TOP_RIGHT",
    "body": "display.TOP_RIGHT",
    "description": "Justifies a text object on its x, y coordinate to the bottom center."
  },
  "MIDDLE_CENTER": {
    "prefix": "MIDDLE_CENTER",
    "body": "display.MIDDLE_CENTER",
    "description": "Justifies a text object on its x, y coordinate to the top right."
  },
  "MIDDLE_RIGHT": {
    "prefix": "MIDDLE_RIGHT",
    "body": "display.MIDDLE_RIGHT",
    "description": "Justifies a text object on its x, y coordinate to the middle right."
  },
  "BOTTOM_RIGHT": {
    "prefix": "BOTTOM_RIGHT",
    "body": "display.BOTTOM_RIGHT",
    "description": "Justifies a text object on its x, y coordinate to the bottom right."
  },
  "WIDTH": {
    "prefix": "WIDTH",
    "body": "display.WIDTH",
    "description": "The display width in pixels. Equal to 640."
  },
  "HEIGHT": {
    "prefix": "HEIGHT",
    "body": "display.HEIGHT",
    "description": "Justifies a text object on its x, y coordinate to the top right."
  }
}
